{"version":3,"file":"static/js/300.1e26cc00.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","redux/contacts/selectors.js","components/Contacts/Contacts.jsx","components/Contacts/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactsCounter/ContactsCounter.module.css?937e","components/ContactsCounter/ContactsCounter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contacts__container\":\"Contacts_contacts__container__2SjKn\",\"contacts_list\":\"Contacts_contacts_list__w0Qzr\",\"contact_item\":\"Contacts_contact_item__UDACC\",\"btn\":\"Contacts_btn__rNftF\"};","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.value;\n","import css from './Contacts.module.css';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { getFilter } from '../../redux/contacts/selectors';\n\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from '../../redux/contacts/operations';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (filter.length === 0) {\n    return contacts;\n  }\n  const contactsArr = contacts;\n\n  const contactsFindArr = contactsArr.filter(({ name }) => {\n    const nameContact = name.toLowerCase();\n    const nameFilter = filter.toLowerCase();\n    return nameContact.includes(nameFilter);\n  });\n\n  return contactsFindArr;\n};\n\nexport const Contacts = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleDelete = e => {\n    const currentId = e.currentTarget.id;\n    dispatch(deleteContact(currentId));\n  };\n\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  return visibleContacts.map(({ name, number, id }) => (\n    <li className={css.contact_item} key={id}>\n      <span>\n        &#10032; {name}: {number}\n      </span>\n      <button className={css.btn} onClick={handleDelete} id={id}>\n        Delete\n      </button>\n    </li>\n  ));\n};\n","import { Contacts } from './Contacts';\nimport css from './Contacts.module.css';\n\nimport { setFilter } from '../../redux/contacts/filtersSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <div className={css.contacts__container}>\n      <label>\n        {/* Find contacts by name */}\n        <input\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={onChangeFilter}\n          placeholder=\"Find contacts by name...\"\n        />\n      </label>\n      <ul className={css.contacts_list}>\n        <Contacts />\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"btn\":\"ContactForm_btn__wll+u\"};","import css from './ContactForm.module.css';\n\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\nimport { addContact } from '../../redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    let presenceContact = false;\n\n    contacts.map(({ name }) => {\n      if (name === form.name.value) {\n        form.reset();\n        presenceContact = true;\n        return alert(`${name} is already in contacts`);\n      } else {\n        return null;\n      }\n    });\n\n    if (!presenceContact) {\n      dispatch(\n        addContact({ name: form.name.value, number: form.number.value })\n      );\n      form.reset();\n    }\n  };\n  return (\n    <div className={css.form}>\n      <form onSubmit={handleOnSubmit}>\n        <label>\n          {/* Name */}\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Name\"\n          />\n        </label>\n        <label>\n          {/* Number */}\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Number\"\n          />\n        </label>\n\n        <button className={css.btn} type=\"submit\">\n          Add contacts\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_counter\":\"ContactsCounter_contacts_counter__OALiR\"};","import { useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport css from './ContactsCounter.module.css';\nexport const ContactsCounter = () => {\n  const contacts = useSelector(getContacts);\n  const contactsQuantity = contacts.length;\n\n  return (\n    <div className={css.contacts_counter}>\n      <p>\n        You have <b>{contactsQuantity}</b> contacts.\n      </p>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n// import { TaskList } from 'components/TaskList/TaskList';\nimport { ContactList } from 'components/Contacts/ContactList';\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsCounter } from 'components/ContactsCounter/ContactsCounter';\n// import { fetchTasks } from 'redux/tasks/operations';\nimport { fetchContacts } from 'redux/contacts/operations';\n// import { selectLoading } from 'redux/tasks/selectors';\nimport { getIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  // const isLoading = useSelector(selectLoading);\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    // dispatch(fetchTasks());\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactsCounter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","value","Contacts","useSelector","dispatch","useDispatch","handleDelete","e","currentId","currentTarget","id","deleteContact","visibleContacts","length","nameContact","name","toLowerCase","nameFilter","includes","getVisibleContacts","map","number","className","css","onClick","ContactList","type","pattern","title","required","onChange","setFilter","placeholder","ContactForm","onSubmit","preventDefault","form","presenceContact","reset","alert","addContact","ContactsCounter","contactsQuantity","useEffect","fetchContacts","Helmet"],"sourceRoot":""}